name: Laravel 

on:
  schedule:
  - cron:  '31 00 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Nginx-php82-laravel10-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.2 and laravel 10
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.2"
        LARAVEL_VERSION: 10
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 ls -la /var/www
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    # - name: Install integraion library
    #   run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    # - name: Download Database information with env / download preconfigure env
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    # - name: Download Database config file in configuration
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    # - name: Check Laravel to Mongodb connection status
    #   run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Nginx-php82-laravel10-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.2 and laravel 10
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.2"
        LARAVEL_VERSION: 10
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    # - name: Install integraion library
    #   run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    # - name: Download Database information with env / download preconfigure env
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    # - name: Download Database config file in configuration
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    # - name: Check Laravel to Mongodb connection status
    #   run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara


  Nginx-php81-laravel10-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.1 and laravel 10
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 10
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 ls -la /var/www
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    # - name: Install integraion library
    #   run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    # - name: Download Database information with env / download preconfigure env
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    # - name: Download Database config file in configuration
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    # - name: Check Laravel to Mongodb connection status
    #   run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Nginx-php81-laravel10-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.1 and laravel 10
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 10
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    # - name: Install integraion library
    #   run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    # - name: Download Database information with env / download preconfigure env
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    # - name: Download Database config file in configuration
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    # - name: Check Laravel to Mongodb connection status
    #   run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara


  Nginx-php81-laravel9-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.1 and laravel 9
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 9
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 ls -la /var/www
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Nginx-php81-laravel9-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.1 and laravel 9
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 9
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  

  Apache-php82-laravel10-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.2 and laravel 10
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.2"
        LARAVEL_VERSION: 10
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    # - name: Install integraion library
    #   run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    # - name: Download Database information with env / download preconfigure env
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    # - name: Download Database config file in configuration
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    # - name: Check Laravel to Mongodb connection status
    #   run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Apache-php82-laravel10-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.2 and laravel 10
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.2"
        LARAVEL_VERSION: 10
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    # - name: Install integraion library
    #   run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    # - name: Download Database information with env / download preconfigure env
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    # - name: Download Database config file in configuration
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    # - name: Check Laravel to Mongodb connection status
    #   run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara

  Apache-php81-laravel10-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.1 and laravel 10
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 10
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    # - name: Install integraion library
    #   run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    # - name: Download Database information with env / download preconfigure env
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    # - name: Download Database config file in configuration
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    # - name: Check Laravel to Mongodb connection status
    #   run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Apache-php81-laravel10-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.1 and laravel 10
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 10
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    # - name: Install integraion library
    #   run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    # - name: Download Database information with env / download preconfigure env
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    # - name: Download Database config file in configuration
    #   run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    # - name: Check Laravel to Mongodb connection status
    #   run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara


  Apache-php81-laravel9-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.1 and laravel 9
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 9
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Apache-php81-laravel9-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.1 and laravel 9
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 9
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara


  Nginx-php80-laravel9-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.0 and laravel 9
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 9
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Nginx-php80-laravel9-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.0 and laravel 9
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 9
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara


  Apache-php80-laravel9-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.0 and laravel 9
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 9
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Apache-php80-laravel9-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.0 and laravel 9
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 9
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara

    
  Nginx-php81-laravel8-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.1 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 8
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.8.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Nginx-php81-laravel8-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.1 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 8
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.8.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara


  Apache-php81-laravel8-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.1 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 8
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.8.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Apache-php81-laravel8-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.1 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.1"
        LARAVEL_VERSION: 8
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.8.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara


  Nginx-php80-laravel8-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.0 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 8
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.8.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: git clone new project
      run: docker exec laravel_laravel_1 git clone https://DockerStacks@bitbucket.org/DockerStacks/laravel-ecommerce-l8p8.git /var/www/public/ecom
    - name: Build the Docker image mariadb
      run: |
        docker run --detach --name mariadb1 --network=laravel_default -p 3308:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:10.9
    - name: Install project
      run: |
        docker exec laravel_laravel_1 composer install --working-dir=/var/www/public/ecom/
        docker exec laravel_laravel_1 npm install --working-dir=/var/www/public/ecom/
        docker exec laravel_laravel_1 npm run dev --working-dir=/var/www/public/ecom/
    - name: ENV file set
      run: |
        docker exec laravel_laravel_1 cp /var/www/public/ecom/.env_back /var/www/public/ecom/.env
        docker exec laravel_laravel_1 cat /var/www/public/ecom/.env
    - name: Database and app key setup
      run: |
        docker exec laravel_laravel_1 php /var/www/public/ecom/artisan migrate
        docker exec laravel_laravel_1 php /var/www/public/ecom/artisan key:generate
    - name: Application Test
      run: curl -i http://localhost:53487/ecom/public/
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker stop mariadb1
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Nginx-php80-laravel8-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.0 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 8
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.8.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara


  Apache-php80-laravel8-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.0 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 8
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.8.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Apache-php80-laravel8-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.0 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 8
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.8.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara



  Nginx-php74-laravel8-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 7.4 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "7.4"
        LARAVEL_VERSION: 8
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.8.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Nginx-php74-laravel8-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 7.4 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "7.4"
        LARAVEL_VERSION: 8
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.8.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara


  Apache-php74-laravel8-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 7.4 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "7.4"
        LARAVEL_VERSION: 8
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.8.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Apache-php74-laravel8-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 7.4 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "7.4"
        LARAVEL_VERSION: 8
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.8.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara



  Nginx-php80-laravel7-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.0 and laravel 7
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 7
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.7.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Nginx-php80-laravel7-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 8.0 and laravel 7
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 7
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.7.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara


  Apache-php80-laravel7-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.0 and laravel 7
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 7
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.7.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Apache-php80-laravel7-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 8.0 and laravel 7
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 7
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.7.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  


  Nginx-php74-laravel7-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 7.4 and laravel 7
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "7.4"
        LARAVEL_VERSION: 7
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.7.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Nginx-php74-laravel7-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image nginx, php 7.4 and laravel 7
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "7.4"
        LARAVEL_VERSION: 7
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/nginx/conf.d/default.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.7.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara


  Apache-php74-laravel7-AMD64:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 7.4 and laravel 7
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "7.4"
        LARAVEL_VERSION: 7
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.7.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara
  Apache-php74-laravel7-ARM64:
    runs-on: self-hosted
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     php-version: ['8.1', '8.0']
    #     back: ['nginx', 'apache']
    steps:
    - uses: actions/checkout@v2
    # - name: Deleted container 
    #   run: |
    #     docker stop $(docker ps -a -q)
    #     echo "y" | docker system prune -a
    #     sudo rm -rf /tmp/lara
    - name: Build the Docker image apache, php 7.4 and laravel 7
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "7.4"
        LARAVEL_VERSION: 7
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/lara
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=laravel_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  ghcr.io/deck-app/mariadb:10.7
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=laravel_default -p 27017:27017  mongo:latest
    - name: PHP version check
      run:  docker exec laravel_laravel_1 php -v
    - name: Mongodb driver check
      run:  docker exec laravel_laravel_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec laravel_laravel_1 php -m | grep mysqli
    - name: Git Version check
      run: docker exec laravel_laravel_1 git --version
    - name: Curl Version check
      run: docker exec laravel_laravel_1 curl --version
    - name: Nodejs Version check
      run: docker exec laravel_laravel_1 node --version
    - name: NPM Version check
      run: docker exec laravel_laravel_1 npm --version
    - name: Composer test
      run: docker exec laravel_laravel_1 composer
    - name: Check laravel install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:53487/index.php)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec laravel_laravel_1 cat /etc/apache2/httpd.conf
    - name: Laravel test
      run:  curl -i http://localhost:53487/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/laravel.env
    - name: Enverment file contan check
      run: docker exec laravel_laravel_1 cat /var/www/.env
    - name: Check Laravel to mariadb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Install integraion library
      run: docker exec laravel_laravel_1 sudo composer require jenssegers/mongodb 3.7.x
    - name: Download Database information with env / download preconfigure env
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/.env https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.env
    - name: Download Database config file in configuration
      run: docker exec laravel_laravel_1 sudo wget -O /var/www/config/database.php https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo.conf
    - name: Check Laravel to Mongodb connection status
      run: docker exec laravel_laravel_1 sudo php artisan migrate
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        sudo rm -rf /tmp/lara