ARG BACK_END
FROM ghcr.io/deck-app/nginx:v8.1
LABEL maintainer Naba Das <hello@get-deck.com>

ARG LARAVEL_VERSION
RUN mkdir -p /app
RUN mkdir -p /var/preview
COPY default.conf /app/default.conf
COPY default.conf /etc/nginx/conf.d/default.conf
RUN wget -O /var/preview/index.html https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html

ARG SERVER_ROOT
RUN sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/nginx/conf.d/default.conf
RUN sed -i "s#{SERVER_ROOT}#/var/www/public#g" /app/default.conf


# Persistent runtime dependencies
# Example RUN apk add --no-cache php81-openssl php81-sysvmsg php81-curl

WORKDIR /var/www

COPY php.ini /etc/php81/php.ini
ARG DISPLAY_PHPERROR
RUN if [ ${DISPLAY_PHPERROR} = true ]; then \
sed -i "s#{DISPLAY}#On#g" /etc/php81/php.ini \
;else \
sed -i "s#{DISPLAY}#Off#g" /etc/php81/php.ini \
;fi

#Xdebug enable or disable
ARG XDEBUG
RUN if [ ${XDEBUG} = true ]; then \
apk add php81-pecl-xdebug \
&& echo "zend_extension=xdebug" >> /etc/php81/php.ini \
;fi

ARG INSTALL_ADDITIONAL_EXTENSIONS
RUN if [ -z "$INSTALL_ADDITIONAL_EXTENSIONS" ] ; then \
echo "No additional PHP extensions added" \
;else \
apk add --no-cache ${INSTALL_ADDITIONAL_EXTENSIONS} \
;fi

RUN apk add php81-zip php81-pdo_mysql php81-gd
RUN apk add zip
ARG LARAVEL_VERSION
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN sed -i "s#{LARAVEL_VERSION}#${LARAVEL_VERSION}#g" /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

## Linux permission issue
ARG USER_ID
ARG GROUP_ID
RUN apk --no-cache add shadow sudo
RUN usermod -u ${USER_ID} nobody && groupmod -g ${GROUP_ID} nobody

# sudo command without password
RUN echo "nobody ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
RUN composer config --global process-timeout 6000

RUN sed -i "s#{USER_ID}#${USER_ID}#g" /docker-entrypoint.sh
RUN sed -i "s#{GROUP_ID}#${GROUP_ID}#g" /docker-entrypoint.sh
RUN sed -i "s#{BACK_END}#${BACK_END}#g" /docker-entrypoint.sh

## nobody permission issue
RUN usermod --home /home nobody
COPY www.conf /etc/php81/php-fpm.d/www.conf
COPY nginx.conf /etc/nginx/nginx.conf
RUN touch /env
RUN chown -R nobody:nobody /env
RUN chown -R nobody:nobody /home
RUN chown -R nobody:nobody /var/preview/
RUN chown -R nobody:nobody /sbin/
RUN chown -R nobody:nobody /etc/php81/
RUN chown -R nobody:nobody /etc/service/
RUN chown -R nobody:nobody /var/run/
RUN chown -R nobody:nobody /var/log/
RUN chown -R nobody:nobody /var/lib/nginx
RUN chown -R nobody:nobody /etc/nginx
USER nobody
CMD /docker-entrypoint.sh & /sbin/runit-wrapper