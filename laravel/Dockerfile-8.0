ARG BACK_END
FROM ghcr.io/deck-app/${BACK_END}:v8.0
LABEL maintainer Naba Das <hello@get-deck.com>

# Persistent runtime dependencies
# Example RUN apk add --no-cache php8-openssl php8-sysvmsg php8-curl

RUN mkdir -p /app
RUN mkdir -p /var/preview
COPY default.conf /app/default.conf
COPY httpd.conf /app/httpd.conf
RUN wget -O /var/preview/index.html https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html

ARG SERVER_ROOT
ARG BACK_END
RUN if [ ${BACK_END} = nginx ]; then \
    cp /app/default.conf /etc/nginx/conf.d/default.conf && \
    sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/nginx/conf.d/default.conf && \
    sed -i "s#{SERVER_ROOT}#/var/www/public#g" /app/default.conf \
;else \
    cp /app/httpd.conf /etc/apache2/httpd.conf && \
    sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/apache2/httpd.conf && \
    sed -i "s#{SERVER_ROOT}#/var/www/public#g" /app/httpd.conf \
;fi

RUN apk add --no-cache zip php8-pdo_mysql

WORKDIR /var/www
#PHP display error enable or disable
COPY php.ini /etc/php8/php.ini
ARG DISPLAY_PHPERROR
RUN if [ ${DISPLAY_PHPERROR} = true ]; then \
sed -i "s#{DISPLAY}#On#g" /etc/php8/php.ini \
;else \
sed -i "s#{DISPLAY}#Off#g" /etc/php8/php.ini \
;fi

#Xdebug enable or disable
ARG XDEBUG
RUN if [ ${XDEBUG} = true ]; then \
apk add php8-pecl-xdebug \
&& echo "zend_extension=xdebug" >> /etc/php8/php.ini \
;fi

ARG LARAVEL_VERSION
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN sed -i "s#{LARAVEL_VERSION}#${LARAVEL_VERSION}#g" /docker-entrypoint.sh

ARG INSTALL_ADDITIONAL_EXTENSIONS
RUN if [ -z "$INSTALL_ADDITIONAL_EXTENSIONS" ] ; then \
echo "No additional PHP extensions added" \
;else \
apk add --no-cache ${INSTALL_ADDITIONAL_EXTENSIONS} \
;fi

## Linux permission issue
ARG USER_ID
ARG GROUP_ID
RUN apk --no-cache add shadow
RUN if [[ ${BACK_END} = nginx ]] ; then usermod -u ${USER_ID} nobody && groupmod -g ${GROUP_ID} nobody ; else usermod -u ${USER_ID} apache && groupmod -g ${GROUP_ID} apache ; fi

RUN sed -i "s#{USER_ID}#${USER_ID}#g" /docker-entrypoint.sh
RUN sed -i "s#{GROUP_ID}#${GROUP_ID}#g" /docker-entrypoint.sh
RUN sed -i "s#{BACK_END}#${BACK_END}#g" /docker-entrypoint.sh

RUN chmod +x /docker-entrypoint.sh
CMD /docker-entrypoint.sh & /sbin/runit-wrapper